{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","isNaN","defaultProps","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","name","type","onClick","Section","title","children","Notification","message","App","state","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","totalFeedbacks","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAIMA,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIC,UAAU,aAAd,UACE,qBAAIA,UAAU,mBAAd,oBACS,+BAAOL,OAEhB,qBAAIK,UAAU,mBAAd,sBACW,+BAAOJ,OAElB,qBAAII,UAAU,mBAAd,kBACO,+BAAOH,OAEd,qBAAIG,UAAU,mBAAd,oBACS,+BAAOF,OAEhB,qBAAIE,UAAU,mBAAd,+BACqB,IACnB,iCAAOC,MAAMF,GAAsB,IAAMA,EAAzC,cAMRL,EAAWQ,aAAe,CACxBP,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAWPL,QCfAS,G,MAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIL,UAAU,OAAd,SACGM,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAG,OAC3B,oBAAIT,UAAU,aAAd,SACE,wBACEA,UAAU,eACVU,KAAMD,EACNE,KAAK,SACLC,QAASP,EAJX,SAMGI,KAP2BA,UCSzBI,G,MAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,OCEQC,G,MANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,MCwD3BC,E,4MArDbC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,gBAAkB,SAAAe,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAOb,KAAOY,EAAUF,EAAEG,OAAOb,MAAQ,O,EAIhDc,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQxB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzB4B,gCAAkC,WAChC,IAAM3B,EAAQ,EAAK0B,qBACnB,OAAOE,KAAKC,MAAyB,IAAlB,EAAKR,MAAMxB,KAAcG,I,4CAG9C,WACE,MAA+B8B,KAAKT,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBgC,EAAiBD,KAAKJ,qBACtBzB,EAAqB6B,KAAKH,kCAEhC,OACE,qCACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAASwB,KAAKT,MACdd,gBAAiBuB,KAAKvB,oBAG1B,cAAC,EAAD,CAASS,MAAM,aAAf,SACsB,IAAnBe,EACC,cAAC,EAAD,CAAcZ,QAAQ,yBAEtB,cAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO+B,EACP9B,mBAAoBA,a,GA7ChB+B,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.17f4c712.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport './Statistics.scss';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className=\"stats-list\">\r\n      <li className=\"stats-list__item\">\r\n        Goood: <span>{good}</span>\r\n      </li>\r\n      <li className=\"stats-list__item\">\r\n        Neutral: <span>{neutral}</span>\r\n      </li>\r\n      <li className=\"stats-list__item\">\r\n        Bad: <span>{bad}</span>\r\n      </li>\r\n      <li className=\"stats-list__item\">\r\n        Total: <span>{total}</span>\r\n      </li>\r\n      <li className=\"stats-list__item\">\r\n        Positive feedback:{' '}\r\n        <span>{isNaN(positivePercentage) ? '0' : positivePercentage}%</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './FeedbackOptions.scss';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul className=\"list\">\r\n      {Object.keys(options).map(key => (\r\n        <li className=\"list__item\" key={key}>\r\n          <button\r\n            className=\"list__button\"\r\n            name={key}\r\n            type=\"button\"\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {key}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './Section.scss';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './Notification.scss';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    this.setState(prevState => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    return Math.round((this.state.good * 100) / total);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedbacks = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalFeedbacks === 0 ? (\n            <Notification message=\"No feedback given :(\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedbacks}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}